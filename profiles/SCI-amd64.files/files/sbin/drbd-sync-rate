#!/bin/bash

drbdstate='/proc/drbd'
#drbdstate='drbd.log'
fullspeed='65M'
minspeed='2M'
maxspeed_count=1

function some {
   echo some stuff
}

function get-info {
   cat $drbdstate | awk --use-lc-numeric -v fullspeed=$fullspeed -v minspeed=$minspeed -v maxspeed_count=$maxspeed_count '
   function convert(value,dest) {
      t=value
      if (value~"[0-9\\.,]+K") gsub("K|K//sec","",value)
      if (value~"[0-9\\.,]+M") {
         gsub("M|M//sec","",value)
         value=value*M
      }
      if (value~"[0-9\\.,]+G") {
         gsub("G|G//sec","",value)
         value=value*G
      }
      value=value/dest
      return value
   }
   BEGIN {
      K=1
      M=1024*K
      G=1024*M
      n=0
   } /^[ 0-9]+:[ \t]+cs:SyncSource/ {
      #print $0
      col=split($0,str,"[ :]")
      j=0
      for (i=0; i<=col; i++) if (str[i]!="") {
         #print str[i]
         j++
         if (j==1) {
            n++
            name[n]=str[i]
         } 
      }
   } / sync.ed: [0-9\.]+%/ {
      #printf(" %s",$NF)
      split($NF,size,"[()/]")
      #printf(" %s of %s %s is complite, ",size[2],size[3],size[4])
      total_comp_size=total_comp_size+convert(size[2] size[4],K)
      total_size=total_size+convert(size[3] size[4],K)
   } /finish: [0-9:]{3}+/ {
      #printf("whith speed %s %s\n",$(NF-1),$(NF))
      total_speed=total_speed+convert($(NF-1) $(NF),K)
   } END {
      #print n,maxspeed_count
      if ( n <= maxspeed_count ) {
         k=0
         for (i in name) {
            k++
            name_p=name[k]
            speed_p=convert(convert(fullspeed,K)/n,K)
            printf("%s %iK\n",name_p, speed_p)
         }
      } else {
         k=0
         for (i in name) {
            k++
            name_p=name[k]
            if (k<=maxspeed_count) {
               speed_p=convert((convert(fullspeed,K)-(n-maxspeed_count)*convert(minspeed,K))/maxspeed_count,K)
               printf("%s %iK\n",name_p,speed_p)
            } else {
               speed_p=convert(minspeed,K)
               printf("%s %iK\n",name_p, speed_p)
            }
         } 
      }
      #printf("%s of %s, speed %s \n",convert(total_comp_size,G),convert(total_size,G),convert(total_speed,M))
   }'
}

get-info | while read i; do
   /sbin/drbdsetup /dev/drbd$(echo $i|awk '{print $1}') syncer -r $(echo $i| awk '{print $2}')
done | >/dev/null 2>/dev/null
